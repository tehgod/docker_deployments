services:
  vpn:
    image: binhex/arch-qbittorrentvpn
    container_name: qbittorrent
    networks:
      - home_theater_network
    cap_add:
      - NET_ADMIN
    ports:
      - "8118:8118"
      - "9118:9118"
      - "58946:58946"
      - "9080:9080"
    environment:
      - VPN_ENABLED=yes
      - VPN_USER=${OPENVPN_USERNAME}
      - VPN_PASS=${OPENVPN_PASSWORD}
      - VPN_PROV=pia
      - VPN_CLIENT=openvpn
      - ENABLE_STARTUP_SCRIPTS=yes
      - ENABLE_PRIVOXY=yes
      - STRICT_PORT_FORWARD=yes
      - USERSPACE_WIREGUARD=no
      - ENABLE_SOCKS=no
      - LAN_NETWORK=${HOME_NETWORK}  # Updated LAN network
      - NAME_SERVERS=8.8.8.8,8.8.4.4
      - DEBUG=false
      - WEBUI_PORT=9080
      - UMASK=002
      - PUID=${HOME_THEATER_UID}  # Updated PUID
      - PGID=${HOME_THEATER_GID}  # Updated PGID
      - TZ=${TZ}
    volumes:
      - ${HOME_THEATER_DIR}:/data
      - ${APPDATA_DIR}/qbittorrent:/config
    restart: unless-stopped

  prowlarr:
    image: linuxserver/prowlarr
    container_name: prowlarr
    restart: unless-stopped
    networks:
      - home_theater_network
    ports:
      - 9696:9696
    environment:
      - PUID=${HOME_THEATER_UID}
      - PGID=${HOME_THEATER_GID}
      - TZ=${TZ}
    volumes:
      - ${APPDATA_DIR}/prowlarr:/config
    depends_on:
      - vpn

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    restart: unless-stopped
    networks:
      - home_theater_network
    environment:
      - PUID=${HOME_THEATER_UID}
      - PGID=${HOME_THEATER_GID}
      - TZ=${TZ}
    ports:
      - 7878:7878
    volumes:
      - ${APPDATA_DIR}/radarr:/config
      - ${HOME_THEATER_DIR}:/data
    depends_on:
      - prowlarr

  sonarr:
    image: linuxserver/sonarr
    restart: unless-stopped
    container_name: sonarr
    networks:
      - home_theater_network
    environment:
      - PUID=${HOME_THEATER_UID}
      - PGID=${HOME_THEATER_GID}
      - TZ=${TZ}
    ports:
      - 8989:8989
    volumes:
      - ${APPDATA_DIR}/sonarr:/config
      - ${HOME_THEATER_DIR}:/data
    depends_on:
      - prowlarr

  bazarr:
    image: linuxserver/bazarr
    restart: unless-stopped
    container_name: bazarr
    networks:
      - home_theater_network
    environment:
      - PUID=${HOME_THEATER_UID}
      - PGID=${HOME_THEATER_GID}
      - TZ=${TZ}
    ports:
      - 6767:6767
    volumes:
      - ${APPDATA_DIR}/bazarr:/config
      - ${HOME_THEATER_DIR}:/data
    depends_on:
      - prowlarr
  
  overseerr:
    image: sctx/overseerr
    container_name: overseerr
    networks:
      - home_theater_network
      - traefik_proxy
    environment:
      - LOG_LEVEL=debug
      - TZ=${TZ}
    ports:
      - 5055:5055
    volumes:
      - ${APPDATA_DIR}/overseerr:/app/config
    restart: unless-stopped
    user: "${HOME_THEATER_UID}:${HOME_THEATER_GID}"
    depends_on:
      - radarr
      - sonarr
    labels:
      - "traefik.enable=true"
      # HTTP Routers
      - "traefik.http.routers.overseerr-rtr.entrypoints=websecure"
      - "traefik.http.routers.overseerr-rtr.rule=Host(`request.$DOMAINNAME_1`)"
      # HTTP Services
      - "traefik.http.routers.overseerr-rtr.middlewares=chain-no-auth@file"
      - "traefik.http.routers.overseerr-rtr.service=overseerr-svc"
      - "traefik.http.services.overseerr-svc.loadbalancer.server.port=5055"

networks:
  home_theater_network:
    driver: bridge
    name: home_theater_network
  traefik_proxy:
    driver: bridge
    name: traefik_proxy


