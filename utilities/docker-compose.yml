services:   
  metube:
    image: ghcr.io/alexta69/metube
    container_name: metube
    restart: unless-stopped
    ports:
      - "10009:8081"
    environment:
      - "UID=${DOCKER_RUNNER_UID}"
      - "GID=${DOCKER_RUNNER_GID}"
    volumes:
      - /ytdlp-downloads:/downloads
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  filebot:
    image: jlesage/filebot
    container_name: filebot
    restart: unless-stopped
    environment:
      - USER_ID=${HOME_THEATER_UID}
      - GROUP_ID=${HOME_THEATER_GID}
    ports:
      - 10012:5800
    volumes:
      - ${APPDATA_DIR}/filebot:/config:rw
      - /home_theater_data/torrents/completed:/storage:rw
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  speedtest-tracker:
    image: lscr.io/linuxserver/speedtest-tracker
    restart: unless-stopped
    container_name: speedtest-tracker
    ports:
      - 10019:80
      # - 10020:443
    environment:
      - PUID=${DOCKER_RUNNER_UID}
      - PGID=${DOCKER_RUNNER_GID}
      - APP_KEY=${SPEEDTEST_APP_KEY}
      - DB_CONNECTION=sqlite
      - SPEEDTEST_SCHEDULE="*/30 * * * *"
      - DISPLAY_TIMEZONE=${TZ}
    volumes:
      - ${APPDATA_DIR}/speedtest:/config
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: unless-stopped
    environment:
      - TZ=${TZ}
      - WATCHTOWER_LABEL_ENABLE=1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  paperless-ngx-broker:
    networks:
      - paperless-network
    container_name: paperless-ngx-broker
    image: docker.io/library/redis:8
    restart: unless-stopped
    volumes:
      - redisdata:/data
  
  paperless-ngx:
    container_name: paperless-ngx
    image: ghcr.io/paperless-ngx/paperless-ngx
    restart: unless-stopped
    networks:
      - paperless-network
    depends_on:
      - paperless-ngx-broker
    ports:
      - "10007:8000"
    volumes:
      - ${APPDATA_DIR}/paperless-ngx/data:/usr/src/paperless/data
      - /paperless-ngx/media:/usr/src/paperless/media
      - /paperless-ngx/export:/usr/src/paperless/export
      - /paperless-ngx/import:/usr/src/paperless/consume
    environment:
      PAPERLESS_REDIS: redis://paperless-ngx-broker:6379
      PAPERLESS_DBENGINE: mariadb
      PAPERLESS_DBHOST: ${MYSQL_ADDRESS}
      PAPERLESS_DBUSER: ${MYSQL_USERNAME} # only needed if non-default username
      PAPERLESS_DBPASS: ${MYSQL_PASSWORD} # only needed if non-default password
      PAPERLESS_DBPORT: 3306
      PAPERLESS_CONSUMER_POLLING: 10

  mealie:
    container_name: mealie
    image: ghcr.io/mealie-recipes/mealie
    restart: unless-stopped
    networks:
      - traefik_proxy
    ports:
      - 10020:9000
    deploy:
      resources:
        limits:
          memory: 1000M
    volumes: 
      - ${APPDATA_DIR}/mealie:/app/data
    environment:
      ALLOW_SIGNUP: "true"
      PUID: ${DOCKER_RUNNER_UID}
      PGID: ${DOCKER_RUNNER_GID}
      TZ: ${TZ}
      BASE_URL: https://${MEALIE_URL}
    labels:
      - "traefik.enable=true"
      # HTTP Routers
      - "traefik.http.routers.mealie-rtr.entrypoints=websecure"
      - "traefik.http.routers.mealie-rtr.rule=Host(`${MEALIE_URL}`)"
      # HTTP Services
      - "traefik.http.routers.mealie-rtr.service=mealie-svc"
      - "traefik.http.services.mealie-svc.loadbalancer.server.port=9000"
      # Middleware
      - "traefik.http.routers.mealie-rtr.middlewares=chain-no-auth@file"
      - "com.centurylinklabs.watchtower.enable=true"

volumes:
  redisdata:
s
networks:
  traefik_proxy:
    name: traefik_proxy
    external: true
  paperless-network:
    name: paperless-network